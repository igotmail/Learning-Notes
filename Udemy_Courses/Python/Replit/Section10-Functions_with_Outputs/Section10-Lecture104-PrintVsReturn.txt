# Lecture 104 - Print vs. Return

# The Return keyword allows us to utilize information that is generated by a function
# For example, we can utilize a function's output continuously throughout a program if we use the return keyword as it stores an actual, usable output 
def addition(n1, n2):
  return n1 + n2
  
num1 = int(input("Please enter the 1st number: "))
num2 = int(input("Please enter the 2nd number: "))

add_result = addition(num1, num2)
print(add_result)

num3 = int(input("Please enter the 3rd number: "))

add_result = addition(add_result, num3)
print(f"Here we get an actual result: {add_result}")

print("")
print("=============================================================")
print("")

# However, if we use the print function at the end of a function we've defined, we won't be able to utilize the output of that function in the form of a variable because the print function itself can't be stored as a variable
def multiplication(n1, n2):
  print(n1 * n2)

num4 = int(input("Please enter the 4th number: "))
num5 = int(input("Please enter the 5th number: "))

# Storing the print statement of multiplication() in a variable
multiply_result = multiplication(num4, num5)

# Trying to output the multiply_result variable. The program returns "None" for the variable
print(f"The result of the multiplication function stored in a variable is 'None' -> {str(multiply_result)}")