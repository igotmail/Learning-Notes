# Lecture 59: Defining and Calling Python Functions

# Documentation: https://docs.python.org/3/library/functions.html
# The official documentation for any programming language is a great place to start when you want to understand how to do a certain thing in your program

# Functions - Functions are followed by a pair of parenthesis ():
# print()
# len()
# min()
# avg()
# max()

# Creating your own function -> def [function_name]():
# We are defining a new function which can do whatever we want for it to do
def my_function():
  print("Hello")

# Calling your function - A function will not execute the code inside of it until you call it
my_function()

# Functions are useful because they allow programmers to develop a set of instructions that can be executed repeatedly. You do not need to continuously write the same code over and over again. Functions eliminate redundancy.

# Reeborg challenge - Creating a sqaure:
# def turn_right():
#     turn_left()
#     turn_left()
#     turn_left()

# def create_square():
#     turn_left()
#     move()
#     turn_right()
#     move()
#     turn_right()
#     move()
#     turn_right()
#     move()
#     turn_left()
#     turn_left()
    
# create_square()

# ================================================================== #

# Lecture 60: The Hurdles Loop Challenge: Reeborg Challenge - Hurdle loop
# def turn_right():
#     turn_left()
#     turn_left()
#     turn_left()
    
# def jump():
#     move()
#     turn_left()
#     move()
#     turn_right()
#     move()
#     turn_right()
#     move()
#     turn_left()
    
# hurdles = 6
# for hurdle in range(0, hurdles):
#     jump()