{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Times New Roman;}{\f1\fnil\fcharset0 Calibri;}{\f2\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue255;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs24\lang9 Dylan Lawson\par
Dr. Angela Yu\par
Python Bootcamp\par
3rd November 2022\par

\pard\sa200\sl276\slmult1\qc Python Bootcamp Notes\par

\pard\sa200\sl276\slmult1\b\fs28 Section 2: Beginner - Understanding Data Types and How to Manipulate Strings\par
\ul\b0 19. Python Primitive Data Types\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\ulnone\fs24 Here we learned of 4 primitive data types: Strings, Integers, Floats, and Booleans\b\fs28\par
{\pntext\f2\'B7\tab}\fs24 Strings: \fs28\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li1080\sa200\sl276\slmult1\b0\fs24 You can do what's called "Subscripting" with strings by placing [] next to the string you want to subscript: print(stringHello[0]) -> prints the first character in a strinig\b\fs28\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\fs24 Integers (Whole Numbers):\fs28\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li1080\sa200\sl276\slmult1\b0\fs24 You can use underscores to denote a larger number in a program: 123_456_789\b\fs28\par
{\pntext\f2\'B7\tab}\b0\fs24 The computer will ignore these underscores. These are meant to make readability easier for humans. The underscores take place for commas in larger numbers: 123,456,798\b\fs28\par
{\pntext\f2\'B7\tab}\b0\fs24 print(123_456_789) -> 123456789\b\fs28\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\fs24 Floats (Fractional/Decimal Numbers):\fs28\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li1080\sa200\sl276\slmult1\b0\fs24 We can think of floats as numbers where the decimal point can move freely between a number's numerical spaces:\b\fs28\par
{\pntext\f2\'B7\tab}\b0\fs24 3.145 | 31.45 | 314.5\b\fs28\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\fs24 Booleans (True/False):\fs28\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li1080\sa200\sl276\slmult1\b0\fs24 Booleans will only have a True or Fase value\b\fs28\par
{\pntext\f2\'B7\tab}\b0\fs24 If you see a varialble that is initialized with True or False, it is a boolean.\b\fs28\par
{\pntext\f2\'B7\tab}\b0\fs24 You may see boolean variables start with the name "is":\b\fs28\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li1440\sa200\sl276\slmult1\b0\fs24 isProgrammingFun | isSubstracted | isCharacterMoving\b\fs28\par

\pard\sa200\sl276\slmult1\ul\b0 20. Type Error, Type Checking and Type Conversion\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\ulnone\fs24 Here we reviewed the importance of using data that functions will accept. \b\fs28\par
{\pntext\f2\'B7\tab}\b0\fs24 Not doing so could result in a TypeError error.\b\fs28\par
{\pntext\f2\'B7\tab}\b0\fs24 Replit documentation: {{\field{\*\fldinst{HYPERLINK https://replit.com/@igotmail/Section2-Lecture20-TypeError#main.py }}{\fldrslt{https://replit.com/@igotmail/Section2-Lecture20-TypeError#main.py\ul0\cf0}}}}\b\f0\fs28\par

\pard\sa200\sl276\slmult1\ul\b0 21. Interactive Coding Exercise - Data Types\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\ulnone\fs24 Here we add the digits from a 2 digit number:\b\fs28\par
{\pntext\f2\'B7\tab}\b0\fs24 two_digit_number = input("Type a two digit number: ")\b\fs28\par
{\pntext\f2\'B7\tab}\b0\fs24 print(int(two_digit_number[0]) + int(two_digit_number[1]))\b\fs28\par

\pard\sa200\sl276\slmult1\ul\b0 22. Mathematical Operations in Python\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\ulnone\fs24 Here we talked about the different mathematical operators Python uses and the order of operations that Python follows\ul\fs28\par
{\pntext\f2\'B7\tab}\ulnone\fs24 PEMDAS (Parenthesis, Exponents, Multiplication, Division, Addition, Subtraction) - Order of operations\ul\fs28\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li1080\sa200\sl276\slmult1\ulnone\fs24 Something to make note of is Python considers \b Multiplication\b0  and \b Division\b0  of equal importance (*, /)\ul\fs28\par
{\pntext\f2\'B7\tab}\ulnone\fs24 Additionally, Python considers \b Addition \b0 and \b Subtraction \b0 of equal importance (+, -)\ul\fs28\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li1440\sa200\sl276\slmult1\ulnone\fs24 Whichever operator is furthest to the LEFT WILL BE EXECUTED FIRST\ul\fs28\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 {\ulnone\fs24{\field{\*\fldinst{HYPERLINK https://replit.com/@igotmail/Section2-Lecture22-MathematicalOperators#main.py }}{\fldrslt{https://replit.com/@igotmail/Section2-Lecture22-MathematicalOperators#main.py\ul0\cf0}}}}\ulnone\b\f0\fs28\par

\pard\sa200\sl276\slmult1\ul\b0 23. Interactive Coding Exercise - BMI Calculator\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\ulnone\fs24 Here is my working BMI calculator submission:\fs28\par
{\pntext\f2\'B7\tab}\fs24 height = input("enter your height in m: ")\par
{\pntext\f2\'B7\tab}weight = input("enter your weight in kg: ")\par
{\pntext\f2\'B7\tab}# 1) Store the BMI calculation:\par
{\pntext\f2\'B7\tab}BMI = float(weight) / (float(height) ** 2)\par
{\pntext\f2\'B7\tab}# 2) print the results of BMI:\par
{\pntext\f2\'B7\tab}print(int(BMI))\par
{\pntext\f2\'B7\tab}# Refactoring code to reduce cache usage:\par
{\pntext\f2\'B7\tab}# print(int(float(weight) / (float(height) ** 2)))\b\par

\pard\sa200\sl276\slmult1\ul\b0\fs28 24. Number Manipulation and F-Strings in Python\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\ulnone\fs24 Here we learned about Floor Division, the Round() function, and the Ceil() function\ul\fs28\par
{\pntext\f2\'B7\tab}\ulnone\fs24 The Round() function allows us to round a number to the nearest multiple of 10 and round the specified number to a certain decimal place\ul\fs28\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li1080\sa200\sl276\slmult1\ulnone\fs24 For example, 2.66667 can be rounded to 3 by entering round(8 / 3)\ul\fs28\par
{\pntext\f2\'B7\tab}\ulnone\fs24 You can also round 2.66667 to 2.7 by entering: round(8 / 3, 1) - rounds up the number in the tenths decimal place\ul\fs28\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\ulnone\fs24 Floor Division is enabled with the double division signs: //\ul\fs28\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li1080\sa200\sl276\slmult1\ulnone\fs24 This operator rounds the result of an equation down to the nearest integer\ul\fs28\par
{\pntext\f2\'B7\tab}\ulnone\fs24 8 // 3 = 2.6 repeating is rounded down to 2\ul\fs28\par
{\pntext\f2\'B7\tab}\ulnone\fs24 -8 // 3 = -3 (-2.6 repeating floored would be rounded down to -3 as it is lesser than -2)\ul\fs28\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\ulnone\fs24 The Ceil() function is not a built in function and must be imported from the "math" module: from math import ceil\ul\fs28\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li1080\sa200\sl276\slmult1\ulnone\fs24 We can then us the ceil() function to round a number to the next greatest integer: ceil(8 / 3) = 3\ul\fs28\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\ulnone\fs24 We also learned more about the +=, -=, /=, and *= opertators\ul\fs28\par
{\pntext\f2\'B7\tab}{\ulnone\fs24{\field{\*\fldinst{HYPERLINK https://replit.com/@igotmail/Section2-Lecture2425-NumberManipulation#main.py }}{\fldrslt{https://replit.com/@igotmail/Section2-Lecture2425-NumberManipulation#main.py\ul0\cf0}}}}\f0\fs28\par

\pard\sa200\sl276\slmult1 25. Interactive Coding Exercise\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 {\ulnone\fs24{\field{\*\fldinst{HYPERLINK https://replit.com/@igotmail/Section2-Lecture2425-NumberManipulation#main.py }}{\fldrslt{https://replit.com/@igotmail/Section2-Lecture2425-NumberManipulation#main.py\ul0\cf0}}}}\f0\fs28\par

\pard\sa200\sl276\slmult1 26. Day 2 Project: Tip Calculator\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\ulnone\fs24 Here we created a program that calculates how much money a group of people would need to pay for a bill where the tip is already added to the total bill.\ul\fs28\par
{\pntext\f2\'B7\tab}\ulnone\fs24 The first step is to receive the total bill - Let's say it's 150.00\ul\fs28\par
{\pntext\f2\'B7\tab}\ulnone\fs24 The second step is to find out the tip percentage eveyone agrees on paying - Let's say it's 14%\ul\fs28\par
{\pntext\f2\'B7\tab}\ulnone\fs24 The third step is to find out how many people are splitting the bill - Let's say it's 7\ul\fs28\par
{\pntext\f2\'B7\tab}\ulnone\fs24 Then we would need to add 14% of 150.00 to 150.00 (21+150.00 = 171.00)\ul\fs28\par
{\pntext\f2\'B7\tab}\ulnone\fs24 Then we would divide 171.00 by 7 (171.00 / 7 = 24.428)\ul\fs28\par
{\pntext\f2\'B7\tab}\ulnone\fs24 Then we would round the result by 2 decimal places (24.43)\ul\fs28\par
{\pntext\f2\'B7\tab}\ulnone\fs24 So, each person would need to play $24.43 in order to leave the waitor or waitress a tip of 14%\ul\fs28\par
{\pntext\f2\'B7\tab}\ulnone\fs24 Keep in mind that this is for when an entire party of people are sharing the bill or are on 1 bill\ul\fs28\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li1080\sa200\sl276\slmult1\ulnone\fs24 Calculating a tip would be different if everyone is paying separately for their service as a unique bill would be distributed to each person.\ul\fs28\par
{\pntext\f2\'B7\tab}\ulnone\fs24 So everyone would tip the waitor/waitress separately.\ul\fs28\par

\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 {\ulnone\fs24{\field{\*\fldinst{HYPERLINK https://replit.com/@igotmail/Section2-Lecture26-TipCalculator#main.py }}{\fldrslt{https://replit.com/@igotmail/Section2-Lecture26-TipCalculator#main.py\ul0\cf0}}}}\f0\fs28\par

\pard\sa200\sl276\slmult1\ulnone\b End of Section 2\ul\b0\par
\par
\par
\ulnone\b\fs24\par
\fs28\par
\par
\par
\par
\b0\f1\fs22\par
}
 